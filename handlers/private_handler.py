from aiogram import Router, types, F, Bot
from aiogram.filters import Command, or_f
from aiogram.methods import GetChatMember
from custom_filters.chat_type_filter import ChatTypeFilter
from keyboards.reply_keybrd import get_keyboard

import os

from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter, or_f

from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import orm_add_suggest

from handlers.admin_handler import CHANNEL_ID

private_router = Router()
private_router.message.filter(ChatTypeFilter(['private']))


USER_KB = get_keyboard(
    "–ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –ø–æ—Å—Ç", 
    "–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é",
    placeholder="–û–±–µ—Ä—ñ—Ç—å",
    sizes=(2, )
)

bot = Bot(os.getenv("TOKEN"))

@private_router.message(StateFilter(None),Command('start'))
async def start_cmd(message: types.Message):
    chat_info = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)
    if chat_info.status != 'left':
        await message.answer(
        '–í—ñ—Ç–∞—é! üíå –Ø –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –∫–∞–Ω–∞–ª—É "Channel Name".\n–û–±–µ—Ä—ñ—Ç—å, —â–æ —Ö–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ ‚¨áÔ∏è',
        reply_markup=USER_KB)
    else:
        await message.answer(text="<b>–°—Ö–æ–∂–µ –≤–∏ –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ –∫–∞–Ω–∞–ª!</b>\n"
                           "–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è, –ø—ñ—Å–ª—è —Ü—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start "
                           "\n\n\n<a href='https://t.me/+cv1L5SHF66c1ZmQy'>–ö–ê–ù–ê–õ</a>\n\n\n", 
                     parse_mode='HTML')

    


# FMS


class SuggestPost(StatesGroup):
    
    title = State()
    text = State()
    anon = State()
    image = State()
    user_id = State()
    checked = State()
    
    texts = {
        'SuggestPost:title': '–í–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É(–∑–∞–≥–æ–ª–æ–≤–æ–∫) –∑–Ω–æ–≤—É',
        'SuggestPost:text': '–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å –∑–Ω–æ–≤—É',
        'SuggestPost:anon': '–í–≤–µ–¥—ñ—Ç—å —á–∏ —Ö–æ—á–µ—Ç–µ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –ø–æ—Å—Ç –∞–Ω–æ–Ω—ñ–º–Ω–æ (–¢–∞–∫/–ù—ñ) –∑–Ω–æ–≤—É',
        'SuggestPost:image': '–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ –∑–Ω–æ–≤—É',
    }


@private_router.message(StateFilter(None), F.text == "–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é")
async def connect_with_admins(message: types.Message):
    await message.answer("–§—É–Ω–∫—Ü—ñ—è –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ ‚ùó")
    

@private_router.message(StateFilter(None), F.text == "–ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –ø–æ—Å—Ç")
async def suggest_post(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É (–∑–∞–≥–æ–ª–æ–≤–æ–∫) –¥–ª—è –ø–æ—Å—Ç—É", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(SuggestPost.title)
    
    
@private_router.message(StateFilter('*'), Command('cancel'))
async def cancel_task(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –¥—ñ–π", reply_markup=USER_KB)
        return
    await state.clear()
    await message.answer("–î—ñ—ó —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ ‚úÖ", reply_markup=USER_KB)
    
    
@private_router.message(StateFilter('*'), Command('back'))
async def back_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    
    if current_state is None:
        await message.answer('–ù—ñ–∫—É–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—å')
        return
    
    if current_state == SuggestPost.title:
        await message.answer("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É (–∑–∞–≥–æ–ª–æ–≤–æ–∫) –¥–ª—è –ø–æ—Å—Ç—É")
    
    previous = None
    
    for step in SuggestPost.__all_states__:
        if step.state == current_state:
            await state.set_state(previous)
            
            # AttributeError fix
            try:
                await message.answer(f"{SuggestPost.texts[previous.state]}")
                return
            except AttributeError:
                await state.set_state(SuggestPost.title)
        
        previous = step
    
    
@private_router.message(SuggestPost.title, F.text)
async def title_of_post(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç—É")
    await state.update_data(title=message.text)
    await state.set_state(SuggestPost.text)


@private_router.message(SuggestPost.title)
async def title_of_post_dem(message: types.Message, state: FSMContext):
    await message.answer("–ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å <b>–ó–ê–ì–û–õ–û–í–û–ö</b> –ø–æ—Å—Ç—É")


@private_router.message(SuggestPost.text, F.text)
async def text_of_post(message: types.Message, state: FSMContext):
    await message.answer("–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –ø–æ—Å—Ç –ê–Ω–æ–Ω—ñ–º–Ω–æ? (–¢–∞–∫\–ù—ñ)")
    await state.update_data(text=message.text)
    await state.set_state(SuggestPost.anon)


@private_router.message(SuggestPost.text)
async def text_of_post(message: types.Message, state: FSMContext):
    await message.answer("–ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å <b>–¢–ï–ö–°–¢</b> –ø–æ—Å—Ç—É")


@private_router.message(SuggestPost.anon, or_f(F.text.lower() == "—Ç–∞–∫", F.text.lower() == "yes"))
async def yes_anon_post(message: types.Message, state: FSMContext):  
    await message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø–æ—Å—Ç—É")
    await state.update_data(anon=message.text)
    await state.set_state(SuggestPost.image)

    
    
@private_router.message(SuggestPost.anon, or_f(F.text.lower() == "–Ω—ñ", F.text.lower() == "no"))
async def no_anon_post(message: types.Message, state: FSMContext):  
    await message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø–æ—Å—Ç—É")
    await state.update_data(anon=message.text)
    await state.set_state(SuggestPost.image)


@private_router.message(SuggestPost.anon)
async def anon_of_post_dem(message: types.Message, state: FSMContext):
    await message.answer("–ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ù–∞–ø–∏—à—ñ—Ç—å –ª–∏—à–µ '–¢–∞–∫' –∞–±–æ '–ù—ñ'")


@private_router.message(SuggestPost.image, F.photo)
async def img_posted(message: types.Message, state: FSMContext, session: AsyncSession):
    await state.update_data(image=message.photo[-1].file_id)
    await state.update_data(user_id=message.from_user.id)
    await state.update_data(checked=0)
    
    data = await state.get_data()

    try:
        await orm_add_suggest(session, data)
        await message.answer("–í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ –ø–æ—Å—Ç –ø—Ä–∏–π–Ω—è—Ç–æ, –æ—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó üòÑ")
        await state.clear()
    except Exception as e:
        await message.answer(
            f"–ü–æ–º–∏–ª–∫–∞: \n{str(e)}\–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Å–∏—Å –∞–¥–º—ñ–Ω–∞",
            reply_markup=USER_KB,
        )


@private_router.message(SuggestPost.image)
async def img_post_dem(message: types.Message, state: FSMContext):
    await message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ <b>–§–û–¢–û</b>")